{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/router.js","src/util.js"],"names":["f","exports","module","define","amd","window","global","self","this","router","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","routes","PathRouter","_util","arguments","undefined","_classCallCheck","Map","path","hasOwnProperty","route","callback","normalizeURLPath","set","getRouteMatcher","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","_step$value","_slicedToArray","value","matcher","params","err","return","obj","name","has","trim","replace","removeTrailingSlashRe","keys","pattern","split","map","part","charCodeAt","push","optional","substring","regex","RegExp","join","matches","exec","slice","decodeURI","coerce","reduce","Number","isNaN","parseFloat","isFinite"],"mappings":"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","file":"router.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/**\r\n * Import utils\r\n */\r\nimport { hasOwnProperty, getRouteMatcher, normalizeURLPath } from './util';\r\n\r\n/**\r\n * Router for dispatching callbacks\r\n * based on a URI\r\n *\r\n * @class PathRouter\r\n * @api private\r\n */\r\nclass PathRouter {\r\n\r\n    /**\r\n     * Create a new 'Router' and optionally\r\n     * provide an object of routes that map\r\n     * the path to the callback function\r\n     *\r\n     * @constructor\r\n     * @param {Object} routes (optional)\r\n     * @api public\r\n     */\r\n    constructor(routes = null) {\r\n        this.routes = new Map();\r\n        if (routes) {\r\n            for (const path in routes) {\r\n                if (hasOwnProperty(routes, path)) {\r\n                    this.route(path, routes[path]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add a new route to the router with a path\r\n     * which may or may not contain embedded\r\n     * parameters from which to extract from\r\n     * a matching URL and pass to the provided\r\n     * callback function\r\n     *\r\n     * @param {String} path\r\n     * @param {Function} callback\r\n     * @return {PathRouter}\r\n     * @api public\r\n     */\r\n    route(path, callback) {\r\n        path = normalizeURLPath(path);\r\n        this.routes.set(getRouteMatcher(path), callback);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Test a URL against all the routes and invoke\r\n     * the callback function of the first matching\r\n     * route\r\n     *\r\n     * @param {String} path\r\n     * @return {PathRouter}\r\n     * @api public\r\n     */\r\n    dispatch(path) {\r\n        path = normalizeURLPath(path);\r\n        for (const [matcher, callback] of this.routes) {\r\n            const params = matcher(path);\r\n            if (params) {\r\n                callback.call(null, params);\r\n                return this;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\n/**\r\n * Factory function for creating\r\n * a `PathRouter` instance\r\n *\r\n * @param {Object} routes (optional)\r\n * @return {PathRouter}\r\n * @api public\r\n */\r\nexport default function Router(routes) {\r\n    return new PathRouter(routes);\r\n}\r\n","/**\r\n * Common variables\r\n */\r\nconst has = {}.hasOwnProperty;\r\nconst removeTrailingSlashRe = /\\/$/;\r\n\r\n/**\r\n * Check if a string value is numeric\r\n *\r\n * @param {String} value\r\n * @return {Boolean}\r\n * @api private\r\n */\r\nfunction isNumeric(value) {\r\n    return !Number.isNaN(parseFloat(value)) && isFinite(value);\r\n}\r\n\r\n/**\r\n * Convert strings of primitives\r\n * into their natural type\r\n *\r\n * @param {String} value\r\n * @return {String|Number|Boolean|Null|Undefined}\r\n * @api private\r\n */\r\nfunction coerce(value) {\r\n    if (value === 'true') {\r\n        return true;\r\n    }\r\n    if (value === 'false') {\r\n        return false;\r\n    }\r\n    if (value === 'undefined') {\r\n        return null;\r\n    }\r\n    if (isNumeric(value)) {\r\n        return Number(value);\r\n    }\r\n    return value;\r\n}\r\n\r\n/**\r\n * Determine whether an object has the specified\r\n * property as a direct property of that object\r\n *\r\n * @param {Object} obj\r\n * @param {String} name\r\n * @return {Boolean}\r\n * @api private\r\n */\r\nexport function hasOwnProperty(obj, name) {\r\n    return has.call(obj, name);\r\n}\r\n\r\n/**\r\n * Normalize a URL path for consistency\r\n *\r\n * @param {String} path\r\n * @return {RegExp}\r\n * @api private\r\n */\r\nexport function normalizeURLPath(path) {\r\n    path = path.trim();\r\n    return path === '/' ? path : path.replace(removeTrailingSlashRe, '');\r\n}\r\n\r\n/**\r\n * Parse a URL route and return a function that\r\n * can match the URL and extract the parameters\r\n *\r\n * @param {String} path\r\n * @return {Function}\r\n * @api private\r\n */\r\nexport function getRouteMatcher(path) {\r\n    if (path === '/') {\r\n        return (p) => (p === '/' ? {} : null);\r\n    }\r\n    const keys = [];\r\n    const pattern = path.split('/').map((part) => {\r\n        if (!part) {\r\n            return part;\r\n        }\r\n        const length = part.length;\r\n        const code = part.charCodeAt(0);\r\n        if (code === 42) {\r\n            keys.push('wildcard');\r\n            return '/(.*)';\r\n        } else if (code === 58) {\r\n            const optional = part.charCodeAt(length - 1) === 63;\r\n            keys.push(part.substring(1, optional ? length - 1 : length));\r\n            if (optional) {\r\n                return '(?:/([^/]+?))?';\r\n            }\r\n            return '/([^/]+?)';\r\n        }\r\n        return '/' + part;\r\n    });\r\n    const regex = new RegExp('^' + pattern.join('') + '\\/?$', 'i');\r\n    return (path) => {\r\n        const matches = regex.exec(path);\r\n        if (matches && matches[0]) {\r\n            return matches\r\n                .slice(1)\r\n                .map(decodeURI)\r\n                .map(coerce)\r\n                .reduce((map, value, i) => {\r\n                    map[keys[i]] = value;\r\n                    return map;\r\n                }, {});\r\n        }\r\n        return null;\r\n    };\r\n}\r\n"]}